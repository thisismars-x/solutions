
depth first search
==================>

vector<int> adj[n]
bool visited[n]

void dfs(int s){
    if(visited[s]) return

    processing each node here

    visited[s] = true
    for(auto u: adj[s]){
        dfs(u)
    }
}



breadth first search
===================>

queue<int> q
bool visited[n]
int distance[n]


where x is the node
visited[x] = true
distance[x] = 0
q.push(x)

while(!q.empty()){
    int s = q.front()
    q.pop()

    for(auto u: adj[s]){
        if(visited[u]) continue
        visited[u] = true
        distance[u] = distance[s] + 1
        q.push(u)
    }
}